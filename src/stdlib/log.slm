inc "stdlib/mem.slm"
inc "stdlib.slm"

class log
  prop Id   int.SIZE
  prop Crit 1
  prop Hint 4
  prop Mes  0
 
  var idtemp int.SIZE
  var curlog 128

  {
  args: bool[crit] int[id]
  result:

  sets the log level for logs
  }
  push proc level 2 0
    log.curlog
    log.Id .
    swap put disc

    log.curlog
    log.Crit . 
    swap putc disc
  
    ret
  end

  push proc msg 2 0
    log.curlog
    log.Mes . cstr.clear
    swap
    cstr.cpy disc disc
    
    log.curlog
    log.Hint . swap
    3
    (mem.cpy)

    ret
  end

  push proc cat 1 0
    log.curlog
    log.Mes . swap cstr.cat disc

    ret
  end

  push proc log 0 0
    log.curlog
    log.Crit . readc
    copy 1 == if [
      "\e[1;31m" cstr.print
      "[" cstr.print
      log.curlog
      log.Hint . cstr.print
      "]\ " cstr.print
      log.curlog
      log.Mes . cstr.print
      "\e[0;0m" cstr.println
        
      disc ret
    ]
    copy 2 == if [
      "\e[0;32m" cstr.print
      "[" cstr.print
      log.curlog
      log.Hint . cstr.print
      "]\ " cstr.print
      log.curlog
      log.Mes . cstr.print
      "\e[0;0m" cstr.println
      disc ret
    ]
    copy 3 == if [
      "\e[0;33m" cstr.print
      "[" cstr.print
      log.curlog
      log.Hint . cstr.print
      "]\ " cstr.print
      log.curlog
      log.Mes . cstr.print
      "\e[0;0m" cstr.println
      disc ret
    ]
    disc
    "[" cstr.print
    log.curlog
    log.Hint . cstr.print
    "]\ " cstr.print
    log.curlog

    log.Mes . cstr.println

    ret
  end
end
