inc stdlib/mem.slm
inc stdlib/os.slm

class color
  prop r 1
  prop g 1
  prop b 1
  prop a 1

  push proc new 4 1
    + 256 *
    + 256 *
    +

    ret
  end

  push proc put 2 1
    covr 0 +
    covr 255 &&
    putc disc
    
    covr 1 +
    covr
    256 / disc
    255 &&
    putc disc
    
    covr 2 +
    covr
    256 / disc
    256 / disc
    255 &&
    putc disc
    
    covr 3 +
    covr
    256 / disc
    256 / disc
    256 / disc
    255 &&
    putc disc

    disc

    ret
  end
end

class ppm
  prop w int.SIZE
  prop h int.SIZE
  prop data 0

  var curtemp int.SIZE
  var color int.SIZE
  var file int.SIZE

  push proc new 2 1
    covr
    covr *
    color.SIZE *
    8 +
    (heap.alloc)
    ppm.curtemp swap put disc

    ppm.curtemp read
    ppm.h .
    swap put disc

    ppm.curtemp read
    ppm.w .
    swap put disc
    
    ppm.curtemp read

    ret
  end

  push proc save 2 1
    swap ppm.curtemp swap put disc
   
    511 swap
    65 swap
    -100
    (os.open) ppm.file swap put disc
    
    `P6\n`
    ppm.file read (os.write)

    ppm.curtemp read ppm.w . read
    (int.cstr) copy cstr.len swap
    ppm.file read (os.write)

    ` `
    ppm.file read (os.write)

    ppm.curtemp read ppm.h . read
    (int.cstr) copy cstr.len swap
    ppm.file read (os.write)

    `\n255\n`
    ppm.file read (os.write)
    
    0
    do
      copy
      ppm.curtemp read ppm.data .
      +
      3 swap
      ppm.file read (os.write)

      color.SIZE +
      copy
      ppm.curtemp read ppm.w . read
      ppm.curtemp read ppm.h . read *
      color.SIZE *
      <
    end
    disc

    ppm.file read (os.close)
    
    ppm.curtemp read
    ret
  end

  push proc setpxl 4 1
    ppm.color swap put disc
    ppm.curtemp swap put disc
    covr ppm.w . read
    ppm.curtemp read * +
    color.SIZE *
    swap
    ppm.curtemp swap put disc
    
    ppm.curtemp read
    ppm.data . +
    ppm.color read
    (color.put) disc
    
    ppm.curtemp read
  
    ret
  end

  push proc free 1 0
    (heap.free)
    
    ret
  end
end

