inc "stdlib/loops.slm"

class range
  prop start int.SIZE
  prop stop int.SIZE
  prop current int.SIZE

  var tmp int.SIZE

  oper proc new 2 1
    range.tmp
    int.SIZE 3 *
    (heap.alloc)
    put disc

    range.tmp read range.stop . swap put disc
    range.tmp read range.start . swap put disc

    range.tmp read range.current . 
    range.tmp read range.start . read 1 -
    put disc

    range.tmp read

    ret
  end

  oper proc free 1 0
    (heap.free)

    ret
  end

  push proc iter 1 2
    range.tmp swap put disc

    range.tmp read range.current .
    range.tmp read range.current . read 1 +
    put disc
  
    range.tmp read range.stop . read
    range.tmp read range.current . read
    < if
      range.tmp read range.free
      NULL
      NULL
      ret
    end

    range.tmp read
    range.tmp read range.current .

    ret
  end

  oper proc for 3 0
    loop.block swap put disc
    range.new
    range.iter
    
    loop.block read
    loop.foreach

    ret
  end
end
